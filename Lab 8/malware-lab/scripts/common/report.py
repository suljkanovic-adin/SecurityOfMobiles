# ---------------------------------------------------------------------------
# scripts/common/report.py
# ---------------------------------------------------------------------------

"""Utility functions to write JSON and Markdown reports."""

from __future__ import annotations

import json
from datetime import datetime, timezone
from pathlib import Path
from typing import Any, Dict, List

from rich.console import Console
from rich.table import Table

console = Console()


def write_json(out_dir: Path | str, sample: str, data: Dict[str, Any]):
    """Write *data* as JSON in *out_dir* using *sample* as filename stem."""
    out_dir = Path(out_dir)
    out_dir.mkdir(parents=True, exist_ok=True)
    tgt = out_dir / f"{sample}.json"
    with tgt.open("w", encoding="utf‑8") as fp:
        json.dump(data, fp, indent=2)
    console.print(f"[green]✔ JSON report saved → {tgt}")


def markdown_summary(rows: List[Dict[str, Any]]) -> str:
    """Return a markdown table summarising *rows* (batch run output)."""
    header = f"### Malware‑lab summary – {datetime.now(tz=timezone.utc).isoformat()}\n\n"
    lines = [
        "| Sample | Family | Detected | Evidence categories |",
        "|--------|--------|----------|---------------------|",
    ]
    for row in rows:
        ev_keys = [k for k, v in row["evidence"].items() if v]
        lines.append(
            f"| {row['sample']} | {row['family']} | {row['detected']} | {', '.join(ev_keys)} |"
        )
    return header + "\n".join(lines) + "\n"
